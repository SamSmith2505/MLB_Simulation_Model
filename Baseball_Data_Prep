season_2017 = fread("2017_MLB_PbP_Logs.csv")
colnames(season_2017) = c(
  "dataset",
  "game_id",
  "date",
  "inning",
  "road_score",
  "home_score",
  "batting_team",
  "batter",
  "batter_id",
  "batter_hand",
  "runner_on_first",
  "runner_on_second",
  "runner_on_third",
  "pitching_team",
  "pitcher",
  "pitcher_id",
  "pitcher_hand",
  "catcher",
  "first_base",
  "second_base",
  "third_base",
  "shortstop",
  "left_field",
  "center_field",
  "right_field",
  "number_of_pitches",
  "pitch_sequence",
  "ball_1",
  "ball_2",
  "ball_3",
  "ball_4",
  "strike_1",
  "strike_2",
  "strike_3",
  "hit_type",
  "play_type",
  "runs",
  "outs",
  "stolen_bases",
  "caught_stealing",
  "defensive_interference",
  "passed_ball",
  "wild_pitch",
  "description"
)

season_2018 = fread("2018_MLB_PbP_Logs.csv")

colnames(season_2018) = c(
  "dataset",
  "game_id",
  "date",
  "inning",
  "road_score",
  "home_score",
  "batting_team",
  "batter",
  "batter_id",
  "batter_hand",
  "runner_on_first",
  "runner_on_second",
  "runner_on_third",
  "pitching_team",
  "pitcher",
  "pitcher_id",
  "pitcher_hand",
  "catcher",
  "first_base",
  "second_base",
  "third_base",
  "shortstop",
  "left_field",
  "center_field",
  "right_field",
  "number_of_pitches",
  "pitch_sequence",
  "ball_1",
  "ball_2",
  "ball_3",
  "ball_4",
  "strike_1",
  "strike_2",
  "strike_3",
  "hit_type",
  "play_type",
  "runs",
  "outs",
  "stolen_bases",
  "caught_stealing",
  "defensive_interference",
  "passed_ball",
  "wild_pitch",
  "description"
)
season_2019 = fread("2019_MLB_PbP_Logs.csv")
season_2019$V45 = NULL
colnames(season_2019) = c(
  "dataset",
  "game_id",
  "date",
  "inning",
  "road_score",
  "home_score",
  "batting_team",
  "batter",
  "batter_id",
  "batter_hand",
  "runner_on_first",
  "runner_on_second",
  "runner_on_third",
  "pitching_team",
  "pitcher",
  "pitcher_id",
  "pitcher_hand",
  "catcher",
  "first_base",
  "second_base",
  "third_base",
  "shortstop",
  "left_field",
  "center_field",
  "right_field",
  "number_of_pitches",
  "pitch_sequence",
  "ball_1",
  "ball_2",
  "ball_3",
  "ball_4",
  "strike_1",
  "strike_2",
  "strike_3",
  "hit_type",
  "play_type",
  "runs",
  "outs",
  "stolen_bases",
  "caught_stealing",
  "defensive_interference",
  "passed_ball",
  "wild_pitch",
  "description"
)

mlb_dt = rbind(season_2017, season_2018, season_2019) %>% data.table()

base_stealing_dt = mlb_dt[, .(runner_on_first, stolen_bases, caught_stealing)]

mlb_dt = mlb_dt[play_type != "", ]
mlb_dt[play_type %in% c("SAC FLY"), play_type := "FLYOUT"]
mlb_dt[play_type %in% c("GROUNDED INTO DP", "SAC BUNT", "FIELDERS CHOICE", "DOUBLE PLAY"), play_type := "GROUNDOUT"]

rm(season_2017, season_2018, season_2019)

batter_result_frequency = mlb_dt[, .(dataset,
                                     batter,
                                     batter_hand,
                                     batter_id,
                                     pitcher_hand,
                                     play_type)] %>% group_by(dataset,
                                                              batter,
                                                              batter_hand,
                                                              batter_id,
                                                              pitcher_hand,
                                                              play_type) %>%
  summarise(Freq = n())

pitcher_result_frequency = mlb_dt[, .(dataset,
                                      pitcher,
                                      pitcher_id,
                                      pitcher_hand,
                                      batter_hand,
                                      play_type)] %>% group_by(dataset,
                                                               pitcher,
                                                               pitcher_id,
                                                               pitcher_hand,
                                                               batter_hand,
                                                               play_type) %>%
  summarise(Freq = n())

total_batter_frequency = mlb_dt[, .(dataset,
                                    batter,
                                    batter_hand,
                                    batter_id,
                                    pitcher_hand)] %>% group_by(dataset, batter, batter_hand, batter_id, pitcher_hand) %>%
  summarise(Freq_total = n())

total_pitcher_frequency = mlb_dt[, .(dataset,
                                     pitcher,
                                     pitcher_hand,
                                     pitcher_id,
                                     batter_hand)] %>% group_by(dataset, pitcher, pitcher_hand, pitcher_id, batter_hand) %>%
  summarise(Freq_total = n())

batter_result_frequency = merge(
  batter_result_frequency,
  total_batter_frequency,
  by = c("dataset", "batter", "batter_id", "pitcher_hand"),
  all.x = T
) %>% data.table()

pitcher_result_frequency = merge(
  pitcher_result_frequency,
  total_pitcher_frequency,
  by = c("dataset", "pitcher", "pitcher_id", "batter_hand"),
  all.x = T
) %>% data.table()

batter_result_frequency[, result_frequency := Freq / Freq_total]

pitcher_result_frequency[, result_frequency := Freq / Freq_total]

home_team_dt = unique(mlb_dt[inning == "1T", .(game_id, pitching_team)])

colnames(home_team_dt) = c("game_id", "home_team")

mlb_dt = merge(mlb_dt, home_team_dt, by = "game_id")

home_field_results = mlb_dt[, .(home_team, pitcher_hand, batter_hand, play_type)] %>%
  group_by(home_team, pitcher_hand, batter_hand, play_type) %>% summarise(Freq_total = n())

total_home_field_frequency = mlb_dt[, .(home_team, pitcher_hand, batter_hand)] %>% group_by(home_team,
                                                                                            pitcher_hand,
                                                                                            batter_hand) %>% summarise(Freq_total = n())
colnames(total_home_field_frequency) = c("home_team", "pitcher_hand", "batter_hand", "total_frequency")

home_field_result_frequency = merge(
  home_field_results,
  total_home_field_frequency,
  by = c("home_team", "pitcher_hand", "batter_hand")
) %>% setDT()

home_field_result_frequency[, `:=`(
  park_result_frequency = Freq_total / total_frequency,
  Freq_total = NULL,
  total_frequency = NULL
)]

colnames(home_field_result_frequency) = c(
  "game_home_team",
  "pitcher_hand",
  "batter_hand",
  "play_type",
  "park_result_frequency"
)

base_stealing_dt[is.na(stolen_bases), stolen_bases := 0]
base_stealing_dt[is.na(caught_stealing), caught_stealing := 0]


base_stealing_dt = base_stealing_dt[, .(runner_on_first, stolen_bases_attempt = mean(stolen_bases) + mean(caught_stealing), caught_stealing = (sum(caught_stealing) / (sum(caught_stealing) + sum(stolen_bases)))), by = runner_on_first]
base_stealing_dt = base_stealing_dt[,2:4]
colnames(base_stealing_dt) = c('runner_on_first', 'stolen_base_attempt_odds', 'stolen_base_success_odds')
base_stealing_dt[is.na(stolen_base_success_odds), stolen_base_success_odds := 0]

